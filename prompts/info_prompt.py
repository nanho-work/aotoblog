# prompts/info_prompt.py
def get_prompt(topic, summarized_context):
    return f"""
    주제: {topic}
    아래는 검색을 통해 요약된 참고 내용입니다:
    {summarized_context}

    아래 조건을 반드시 따라 JSON 형식으로만 답변해. 절대 다른 설명이나 불필요한 텍스트는 넣지 마.
    넌 일상 속 유익한 정보와 경험을 쉽게 풀어 쓰는 블로거야.
    웹서치를 해서 정확한 정보를 제공.
    한비야 작가의 구어체 사용.
    content의 지침을 반드시 적용할것 

    {{
    "title": "SEO 친화적이고 독자가 클릭하고 싶게 만드는 제목 (70자 이내)",
    "content": "본문 (최종적으로 반드시 3000~4000자 이상, 마크다운 형식)\\n"
                "이 조건은 최우선이다. 글이 3000자 미만이면 잘못된 출력으로 간주한다.\\n"
                "생성 완료 후 반드시 글자 수를 스스로 점검하고, 3000자 이상이 될 때까지 이어서 작성할 것.\\n"
                "길이가 충분하지 않다면 내용을 압축하지 말고 추가 설명, 실제 사례, 차이점 비교 등을 확장해 채워 넣을 것.\\n"
                "아래 지침을 추가로 따를 것:\\n"
                "1. 중간에 끊기지 않도록 자연스럽게 연결하고, 반복 표현은 피할 것.\\n"
                "2. 본문은 여러 단락으로 나누어 충분히 풍부하게 작성할 것.\\n"
                "## 본문\\n"
                "- 3~5개 소제목(H2)을 사용\\n"
                "- 각 소제목 하위에는 구체적인 설명 포함, 필요 시 실제 사례나 차이점 설명을 상세히 추가\\n"
                "- 필요 시 **리스트**나 간단한 마크다운 표를 활용하여 가독성 강화\\n\\n"
                "## 결론\\n"
                "- 핵심 요약 후 간단히 정리, 전체 분량은 반드시 3000자 이상 유지\\n\\n"
                "- 글은 블로그 글처럼 깔끔하고 정리되게 작성. 불필요한 반복이나 군더더기 문장은 금지.\\n"
                "본문은 2~4문장 단위 문단으로 끊고, 중요한 내용은 번호 리스트(1. 2. 3.) 또는 불릿(•)으로 정리.\\n"
                "내용 전환이나 분위기 구분이 필요할 때는 마크다운 구분선(---)을 적절히 활용.\\n"
                "‘도입부/본문/결론’, ‘이 글에서는’ 같은 메타 표현 금지.\\n"
                "마지막 문단은 한두 문장으로 정리 후 질문형으로 마무리.\\n"
                "블로그 글처럼 자연스럽고 대화하듯, 친근한 존댓말.\\n"
                "과한 격언/광고 톤 금지, 실용과 사례 중심.\\n"
                "SEO 키워드는 6~10회 자연스럽게 반복 (남용 금지).\\n"
                "최신 흐름, 사례, 간단한 데이터 반영 (출처는 일반 문장으로 언급).\\n",
                
    "tags": [
        "SEO 키워드 기반 태그 10개 (주제와 직접 관련된 핵심 키워드)"
    ]
    }}
    """